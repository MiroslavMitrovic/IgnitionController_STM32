<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="stm32f4xx__it_8c" kind="file" language="C++">
    <compoundname>stm32f4xx_it.c</compoundname>
    <includes refid="main_8h" local="yes">main.h</includes>
    <includes refid="stm32f4xx__it_8h" local="yes">stm32f4xx_it.h</includes>
    <incdepgraph>
      <node id="4">
        <label>IgnitionCotrol_Main.h</label>
        <link refid="_ignition_cotrol___main_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>IgnitionCtrl_CalculateTimesAndAngles.h</label>
        <link refid="_ignition_ctrl___calculate_times_and_angles_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>IgnitionCtrl_Config.h</label>
        <link refid="_ignition_ctrl___config_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>IgnitionCtrl_HW_Wrapper.h</label>
        <link refid="_ignition_ctrl___h_w___wrapper_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>IgnitionCtrl_IgnAngleTable.h</label>
        <link refid="_ignition_ctrl___ign_angle_table_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>IgnitionCtrl_Init.h</label>
        <link refid="_ignition_ctrl___init_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>stm32f4xx_it.h</label>
        <link refid="stm32f4xx__it_8h"/>
      </node>
      <node id="1">
        <label>IgnitionController_STM32/Core/Src/stm32f4xx_it.c</label>
        <link refid="stm32f4xx__it_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>math.h</label>
      </node>
      <node id="10">
        <label>stdbool.h</label>
      </node>
      <node id="9">
        <label>stddef.h</label>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>stm32f4xx_hal.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="stm32f4xx__it_8c_1a2c80fd5510e2990a59a5c90d745c716c" prot="public" static="no" mutable="no">
        <type>TIM_HandleTypeDef</type>
        <definition>TIM_HandleTypeDef htim2</definition>
        <argsstring></argsstring>
        <name>htim2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" line="58" column="26" bodyfile="IgnitionController_STM32/Core/Src/main.c" bodystart="42" bodyend="-1" declfile="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" declline="58" declcolumn="26"/>
        <referencedby refid="stm32f4xx__it_8h_1a38ad4725462bdc5e86c4ead4f04b9fc2" compoundref="stm32f4xx__it_8c" startline="206" endline="217">TIM2_IRQHandler</referencedby>
      </memberdef>
      <memberdef kind="variable" id="stm32f4xx__it_8c_1a092aacf4a5d96a3ff4189089c5afa060" prot="public" static="no" mutable="no">
        <type>volatile uint32_t</type>
        <definition>volatile uint32_t g_usSinceDetection</definition>
        <argsstring></argsstring>
        <name>g_usSinceDetection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" line="60" column="26" bodyfile="IgnitionController_STM32/Core/Src/IgnitionCtrl_HW_Wrapper.c" bodystart="41" bodyend="-1" declfile="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" declline="60" declcolumn="26"/>
        <referencedby refid="_ignition_ctrl___h_w___wrapper_8h_1af4a6d2b50759f9aa757f6e2e10a060b7" compoundref="_ignition_ctrl___h_w___wrapper_8c" startline="67" endline="75">HW_Timer_v_Init</referencedby>
        <referencedby refid="stm32f4xx__it_8h_1a38ad4725462bdc5e86c4ead4f04b9fc2" compoundref="stm32f4xx__it_8c" startline="206" endline="217">TIM2_IRQHandler</referencedby>
      </memberdef>
      <memberdef kind="variable" id="stm32f4xx__it_8c_1afc637b5bcfc6d598ff2e2b1d0ab4edd0" prot="public" static="no" mutable="no">
        <type>volatile uint32_t</type>
        <definition>volatile uint32_t g_uSCounter</definition>
        <argsstring></argsstring>
        <name>g_uSCounter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" line="61" column="26" bodyfile="IgnitionController_STM32/Core/Src/IgnitionCtrl_HW_Wrapper.c" bodystart="42" bodyend="-1" declfile="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" declline="61" declcolumn="26"/>
        <referencedby refid="_ignition_ctrl___h_w___wrapper_8h_1af4a6d2b50759f9aa757f6e2e10a060b7" compoundref="_ignition_ctrl___h_w___wrapper_8c" startline="67" endline="75">HW_Timer_v_Init</referencedby>
        <referencedby refid="stm32f4xx__it_8h_1a38ad4725462bdc5e86c4ead4f04b9fc2" compoundref="stm32f4xx__it_8c" startline="206" endline="217">TIM2_IRQHandler</referencedby>
      </memberdef>
      <memberdef kind="variable" id="stm32f4xx__it_8c_1a1c115895137c180f27875c28cb277e59" prot="public" static="no" mutable="no">
        <type>volatile uint32_t</type>
        <definition>volatile uint32_t g_uSDebouncingSignalCounter</definition>
        <argsstring></argsstring>
        <name>g_uSDebouncingSignalCounter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" line="62" column="26" bodyfile="IgnitionController_STM32/Core/Src/IgnitionCtrl_HW_Wrapper.c" bodystart="43" bodyend="-1" declfile="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" declline="62" declcolumn="26"/>
        <referencedby refid="_ignition_ctrl___h_w___wrapper_8h_1af4a6d2b50759f9aa757f6e2e10a060b7" compoundref="_ignition_ctrl___h_w___wrapper_8c" startline="67" endline="75">HW_Timer_v_Init</referencedby>
        <referencedby refid="stm32f4xx__it_8h_1a38ad4725462bdc5e86c4ead4f04b9fc2" compoundref="stm32f4xx__it_8c" startline="206" endline="217">TIM2_IRQHandler</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stm32f4xx__it_8c_1a6ad7a5e3ee69cb6db6a6b9111ba898bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NMI_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>NMI_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles Non maskable interrupt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" line="71" column="6" bodyfile="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" bodystart="71" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8c_1a2bffc10d5bd4106753b7c30e86903bea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HardFault_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>HardFault_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles Hard fault interrupt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" line="86" column="6" bodyfile="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" bodystart="86" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8c_1a3150f74512510287a942624aa9b44cc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MemManage_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>MemManage_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles Memory management fault. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" line="101" column="6" bodyfile="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" bodystart="101" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8c_1a850cefb17a977292ae5eb4cafa9976c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BusFault_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>BusFault_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles Pre-fetch fault, memory access fault. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" line="116" column="6" bodyfile="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" bodystart="116" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8c_1a1d98923de2ed6b7309b66f9ba2971647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UsageFault_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>UsageFault_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles Undefined instruction or illegal state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" line="131" column="6" bodyfile="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" bodystart="131" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8c_1a3e5ddb3df0d62f2dc357e64a3f04a6ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SVC_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>SVC_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles System service call via SWI instruction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" line="146" column="6" bodyfile="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" bodystart="146" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8c_1adbdfb05858cc36fc520974df37ec3cb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DebugMon_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>DebugMon_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles Debug monitor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" line="159" column="6" bodyfile="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" bodystart="159" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8c_1a6303e1f258cbdc1f970ce579cc015623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PendSV_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>PendSV_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles Pendable request for system service. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" line="172" column="6" bodyfile="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" bodystart="172" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8c_1ab5e09814056d617c521549e542639b7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SysTick_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>SysTick_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles System tick timer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" line="185" column="6" bodyfile="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" bodystart="185" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8c_1a38ad4725462bdc5e86c4ead4f04b9fc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TIM2_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>TIM2_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles TIM2 global interrupt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" line="206" column="6" bodyfile="IgnitionController_STM32/Core/Src/stm32f4xx_it.c" bodystart="206" bodyend="217"/>
        <references refid="stm32f4xx__it_8c_1afc637b5bcfc6d598ff2e2b1d0ab4edd0" compoundref="_ignition_ctrl___h_w___wrapper_8c" startline="42">g_uSCounter</references>
        <references refid="stm32f4xx__it_8c_1a1c115895137c180f27875c28cb277e59" compoundref="_ignition_ctrl___h_w___wrapper_8c" startline="43">g_uSDebouncingSignalCounter</references>
        <references refid="stm32f4xx__it_8c_1a092aacf4a5d96a3ff4189089c5afa060" compoundref="_ignition_ctrl___h_w___wrapper_8c" startline="41">g_usSinceDetection</references>
        <references refid="stm32f4xx__it_8c_1a2c80fd5510e2990a59a5c90d745c716c" compoundref="main_8c" startline="42">htim2</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interrupt Service Routines. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="attention"><para></para>
</simplesect>
Copyright (c) 2022 STMicroelectronics. All rights reserved.</para>
<para>This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. </para>
    </detaileddescription>
    <location file="IgnitionController_STM32/Core/Src/stm32f4xx_it.c"/>
  </compounddef>
</doxygen>
